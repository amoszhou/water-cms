<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.water.dao.PriceTypeDAO" >
  <resultMap id="BaseResultMap" type="com.water.domain.PriceType" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="factory_id" property="factoryId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="price" property="price"  />
    <result column="factoryName" property="factoryName" jdbcType="VARCHAR" />
    <result column="sewage" property="sewage"  />
    <result column="is_delete" property="isDelete" jdbcType="INTEGER" />

  </resultMap>
  <sql id="Base_Column_List" >
    id, factory_id, name, price, sewage, is_delete
  </sql>
  <!--权限过滤-->
  <sql id="authSql">
    <where>
      and is_delete = 0

    </where>
  </sql>
  <!-- 查询条件 -->
  <sql id="whereClause">
    <where>
      and is_delete = 0
      <if test="name != null and name.trim() != ''">
        and name like concat('%', trim(#{name}),'%')
      </if>
      <if test="factoryId != null and factoryId.trim() != '' ">
        and factory_id = #{factoryId}
      </if>
      <if test="factoryIds != null and factoryIds.size != 0">
        and factory_id in
        <foreach collection="factoryIds" index="index" item="item"
                 open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
    </where>
  </sql>
  <select id="queryTotal" resultType="int">
    select count(1) from t_price_type
    <include refid="whereClause"/>
  </select>
  <select id="queryList" resultMap="BaseResultMap">
    select  a.id, a.factory_id, a.name, a.price, a.sewage, a.is_delete ,b.name as factoryName
    FROM  (select id,name from t_factory    <include refid="authSql"/> ) as b join
    (select
    <include refid="Base_Column_List"/>
    from t_price_type
    <include refid="whereClause"/>
    <choose>
      <when test="sidx != null and sidx.trim() != ''">
        order by ${sidx} ${order}
      </when>
      <otherwise>
        order by id desc
      </otherwise>
    </choose>
    <if test="offset != null and limit != null">
      limit #{offset}, #{limit}
    </if> )as a on a.factory_id = b.id
  </select>
  <update id="updateDeleteState" parameterType="java.lang.Long">
    update t_price_type
    set is_delete = 1
    where id  =  #{id}
  </update>






  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_price_type
    where id = #{id,jdbcType=INTEGER}
  </select>
  <insert id="insertSelective" parameterType="com.water.domain.PriceType" >
    insert into t_price_type
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="factoryId != null" >
        factory_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="sewage != null" >
        sewage,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="factoryId != null" >
        #{factoryId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price},
      </if>
      <if test="sewage != null" >
        #{sewage},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.water.domain.PriceType" >
    update t_price_type
    <set >
      <if test="factoryId != null" >
        factory_id = #{factoryId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price},
      </if>
      <if test="sewage != null" >
        sewage = #{sewage},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

</mapper>