<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.water.dao.PayRecordDAO" >
  <resultMap id="BaseResultMap" type="com.water.domain.PayRecord" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="water_record_id" property="waterRecordId" jdbcType="INTEGER" />
    <result column="pay_state" property="payState" jdbcType="INTEGER" />
    <result column="customer_id" property="customerId" jdbcType="INTEGER" />
    <result column="water_begin_date" property="waterBeginDate" jdbcType="TIMESTAMP" />
    <result column="water_end_date" property="waterEndDate" jdbcType="TIMESTAMP" />
    <result column="pay_type" property="payType" jdbcType="INTEGER" />
    <result column="water_fee" property="waterFee" jdbcType="DECIMAL" />
    <result column="sewage_fee" property="sewageFee" jdbcType="DECIMAL" />
    <result column="late_fee" property="lateFee" jdbcType="DECIMAL" />
    <result column="total_fee" property="totalFee" jdbcType="DECIMAL" />
    <result column="water_record_code" property="waterRecordCode" jdbcType="VARCHAR" />
    <result column="customerCode" property="customerCode" jdbcType="VARCHAR" />
    <result column="factory_id" property="factoryId" jdbcType="INTEGER" />
    <result column="water_record_code" property="waterRecordCode" jdbcType="VARCHAR" />
    <result column="is_delete" property="isDelete" jdbcType="INTEGER"/>
  </resultMap>
  <sql id="Base_Column_List" >
    id, water_record_id, pay_state, customer_id, water_begin_date, water_end_date, pay_type, 
    water_fee, sewage_fee, late_fee, total_fee, water_record_code, factory_id,is_delete
  </sql>
  <!--权限过滤  t_factory -->
  <sql id="authSqlForFactoryTable">
    <where>
      and is_delete = 0
      <if test="factoryIds != null and factoryIds.size != 0">
        and id in
        <foreach collection="factoryIds" index="index" item="item"
                 open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
    </where>
  </sql>
  <!--权限过滤-->
  <sql id="authSql">
    <where>
      and is_delete = 0
      <if test="factoryIds != null and factoryIds.size != 0">
        and factory_id in
        <foreach collection="factoryIds" index="index" item="item"
                 open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>

    </where>
  </sql>
  <!--权限过滤  t_customer-->
  <sql id="authSqlForCustomer">
    <where>
      and is_delete = 0
      <if test="factoryIds != null and factoryIds.size != 0">
        and factory_id in
        <foreach collection="factoryIds" index="index" item="item"
                 open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
      <if test="customerCode != null and customerCode.trim() != ''">
        and code   like concat('%', trim(#{customerCode}),'%')
      </if>
    </where>
  </sql>
  <!-- 查询条件 -->
  <sql id="whereClause">
    <where>
      and is_delete = 0
      <if test="customerId != null and customerId.trim() != ''">
        and    customer_id = #{customerId}
      </if>
      <if test="waterBeginDate != null and waterBeginDate.trim() != '' ">
        and    water_begin_date &gt;= #{waterBeginDate}
      </if>
      <if test="waterEndDate != null  and waterEndDate.trim() != ''">
        and    water_end_date &lt;= #{waterEndDate}
      </if>
      <if test="factoryId != null and factoryId.trim() != ''">
        and factory_id = #{factoryId}
      </if>
      <if test="factoryIds != null and factoryIds.size != 0">
        and factory_id in
        <foreach collection="factoryIds" index="index" item="item"
                 open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
      <if test="id != null ">
        and id = #{id}
      </if>
    </where>
  </sql>
  <select id="queryTotal" resultType="int">
    select count(1) from t_pay_record
    <include refid="whereClause"/>
  </select>
  <select id="queryList" resultMap="BaseResultMap">
    select  a.id, a.water_record_id, a.pay_state, a.customer_id, a.water_begin_date, a.water_end_date, a.pay_type,
    a.water_fee, a.sewage_fee, a.late_fee, a.total_fee, a.water_record_code, a.factory_id,b.name as
    factoryName,c.code as customerCode
    from (select id,name from t_factory<include refid="authSqlForFactoryTable"/>) as b right JOIN (
    select
    <include refid="Base_Column_List"/>
    from t_pay_record
    <include refid="whereClause"/>
    <choose>
      <when test="sidx != null and sidx.trim() != ''">
        order by ${sidx} ${order}
      </when>
      <otherwise>
        order by id desc
      </otherwise>
    </choose>
    <if test="offset != null and limit != null">
      limit #{offset}, #{limit}
    </if>
    )as a on b.id = a.factory_id  JOIN (SELECT id,name,code from t_customer  <include refid="authSqlForCustomer"/>) as c on c.id = a.customer_id
  </select>


  <update id="updateDeleteState" parameterType="java.lang.Long">
    update t_pay_record
    set is_delete = 1
    where id  =  #{id}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from t_pay_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <insert id="insertSelective" parameterType="com.water.domain.PayRecord" >
    insert into t_pay_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="waterRecordId != null" >
        water_record_id,
      </if>
      <if test="payState != null" >
        pay_state,
      </if>
      <if test="customerId != null" >
        customer_id,
      </if>
      <if test="waterBeginDate != null" >
        water_begin_date,
      </if>
      <if test="waterEndDate != null" >
        water_end_date,
      </if>
      <if test="payType != null" >
        pay_type,
      </if>
      <if test="waterFee != null" >
        water_fee,
      </if>
      <if test="sewageFee != null" >
        sewage_fee,
      </if>
      <if test="lateFee != null" >
        late_fee,
      </if>
      <if test="totalFee != null" >
        total_fee,
      </if>
      <if test="waterRecordCode != null" >
        water_record_code,
      </if>
      <if test="factoryId != null" >
        factory_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="waterRecordId != null" >
        #{waterRecordId,jdbcType=INTEGER},
      </if>
      <if test="payState != null" >
        #{payState,jdbcType=INTEGER},
      </if>
      <if test="customerId != null" >
        #{customerId,jdbcType=INTEGER},
      </if>
      <if test="waterBeginDate != null" >
        #{waterBeginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="waterEndDate != null" >
        #{waterEndDate,jdbcType=TIMESTAMP},
      </if>
      <if test="payType != null" >
        #{payType,jdbcType=INTEGER},
      </if>
      <if test="waterFee != null" >
        #{waterFee,jdbcType=DECIMAL},
      </if>
      <if test="sewageFee != null" >
        #{sewageFee,jdbcType=DECIMAL},
      </if>
      <if test="lateFee != null" >
        #{lateFee,jdbcType=DECIMAL},
      </if>
      <if test="totalFee != null" >
        #{totalFee,jdbcType=DECIMAL},
      </if>
      <if test="waterRecordCode != null" >
        #{waterRecordCode,jdbcType=VARCHAR},
      </if>
      <if test="factoryId != null" >
        #{factoryId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.water.domain.PayRecord" >
    update t_pay_record
    <set >
      <if test="waterRecordId != null" >
        water_record_id = #{waterRecordId,jdbcType=INTEGER},
      </if>
      <if test="payState != null" >
        pay_state = #{payState,jdbcType=INTEGER},
      </if>
      <if test="customerId != null" >
        customer_id = #{customerId,jdbcType=INTEGER},
      </if>
      <if test="waterBeginDate != null" >
        water_begin_date = #{waterBeginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="waterEndDate != null" >
        water_end_date = #{waterEndDate,jdbcType=TIMESTAMP},
      </if>
      <if test="payType != null" >
        pay_type = #{payType,jdbcType=INTEGER},
      </if>
      <if test="waterFee != null" >
        water_fee = #{waterFee,jdbcType=DECIMAL},
      </if>
      <if test="sewageFee != null" >
        sewage_fee = #{sewageFee,jdbcType=DECIMAL},
      </if>
      <if test="lateFee != null" >
        late_fee = #{lateFee,jdbcType=DECIMAL},
      </if>
      <if test="totalFee != null" >
        total_fee = #{totalFee,jdbcType=DECIMAL},
      </if>
      <if test="waterRecordCode != null" >
        water_record_code = #{waterRecordCode,jdbcType=VARCHAR},
      </if>
      <if test="factoryId != null" >
        factory_id = #{factoryId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER} and   pay_type = -1 and pay_state = -1
  </update>
</mapper>