<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.water.dao.CustomerAccountDAO" >
  <resultMap id="BaseResultMap" type="com.water.domain.CustomerAccount" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="balance" property="balance"  />
    <result column="cust_id" property="custId" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="INTEGER" />
    <result column="version" property="version" jdbcType="INTEGER" />
    <result column="is_delete" property="isDelete" jdbcType="INTEGER" />
    <result column="customerName" property="customerName" />
    <result column="factory_id" property="factoryId" jdbcType="INTEGER" />
    <result column="custCode" property="custCode" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, balance, cust_id, update_time, update_user, version, is_delete,factory_id
  </sql>
  <!--权限过滤-->
  <sql id="authSql">
    <where>
      and is_delete = 0
      <if test="custCode != null and custCode.trim() != ''">
        and code like concat('%', trim(#{custCode}),'%')
      </if>
      <if test="factoryIds != null and factoryIds.size != 0">
        and factory_id in
        <foreach collection="factoryIds" index="index" item="item"
                 open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
    </where>
  </sql>
  <!-- 查询条件 -->
  <sql id="whereClause">
    <where>
      and is_delete = 0
      <if test="custId != null and custId.trim() != ''">
        and cust_id = #{custId}
      </if>
      <if test="factoryId != null and factoryId.trim() != '' ">
        and factory_id = #{factoryId}
      </if>
      <if test="factoryIds != null and factoryIds.size != 0">
        and factory_id in
        <foreach collection="factoryIds" index="index" item="item"
                 open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
      <if test="id != null ">
        and id = #{id}
      </if>
    </where>
  </sql>
  <select id="queryTotal" resultType="int">
    select count(1) from t_customer_account
    <include refid="whereClause"/>
  </select>
  <select id="queryList" resultMap="BaseResultMap">
    select a.id, a.balance, a.cust_id, a.update_time, a.update_user, a.version, a.is_delete ,b.name as customerName,a.factory_id,b.code as custCode
    FROM  (select id,name,code from t_customer    <include refid="authSql"/> ) as b join
    (select
    <include refid="Base_Column_List"/>
    from t_customer_account
    <include refid="whereClause"/>
    <choose>
      <when test="sidx != null and sidx.trim() != ''">
        order by ${sidx} ${order}
      </when>
      <otherwise>
        order by id desc
      </otherwise>
    </choose>
    <if test="offset != null and limit != null">
      limit #{offset}, #{limit}
    </if> )as a on a.cust_id = b.id
  </select>
  <update id="updateDeleteState" parameterType="java.lang.Long">
    update t_customer_account
    set is_delete = 1
    where id  =  #{id}
  </update>

  <select id="selectCustomerMessage" resultType="com.water.domain.IdAndNameDTO"  >
    select id , name ,code from t_customer
    <where>
      and is_delete = 0
      <if test="factoryIds != null and factoryIds.size != 0">
        and factory_id in
        <foreach collection="factoryIds" index="index" item="item"
                 open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
    </where>

  </select>

  <select id="selectByCustId" resultType="java.lang.Integer"  parameterType="java.lang.Integer" >
    select count(1)
    from t_customer_account
    where cust_id = #{customerId,jdbcType=INTEGER}
  </select>

  <select id="getByCustId" resultMap="BaseResultMap"  parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from t_customer_account
    where cust_id = #{customerId,jdbcType=INTEGER}
  </select>


  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_customer_account
    where id = #{id,jdbcType=INTEGER}
  </select>
  <insert id="insertSelective" parameterType="com.water.domain.CustomerAccount" >
    insert into t_customer_account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="balance != null" >
        balance,
      </if>
      <if test="custId != null" >
        cust_id,
      </if>

      <if test="updateUser != null" >
        update_user,
      </if>
      <if test="version != null" >
        version,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
      <if test="factoryId != null" >
        factory_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="balance != null" >
        #{balance},
      </if>
      <if test="custId != null" >
        #{custId,jdbcType=INTEGER},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="version != null" >
        #{version,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="factoryId != null" >
        #{factoryId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.water.domain.CustomerAccount" >
    update t_customer_account
    <set >
      <if test="balance != null and raiseMoney != null " >
        balance = #{balance} + #{raiseMoney},
      </if>
      <if test="custId != null" >
        cust_id = #{custId,jdbcType=INTEGER},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="factoryId != null" >
        factory_id = #{factoryId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER} AND  update_time = #{updateTime,jdbcType=TIMESTAMP} AND  balance = #{balance} AND  #{balance} + #{raiseMoney}  &gt;= 0
  </update>
</mapper>

